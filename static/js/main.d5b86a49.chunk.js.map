{"version":3,"sources":["components/BlogList.js","hooks/useFetch.js","pages/Home.js","assests/data/navData.js","components/Navbar.js","components/Input.js","hooks/usePost.js","components/Create.js","components/BlogDetails.js","App.js","index.js"],"names":["BlogList","blogs","title","gridCol","className","map","blog","max","min","author","date","content","id","to","moment","format","substring","Math","floor","random","useFetch","url","time","useState","data","setData","loading","setLoading","error","setError","fetchBlogs","useCallback","a","fetch","response","json","ok","Error","status","message","useEffect","setTimeout","Home","length","filter","navData","name","link","extraClass","Navbar","item","Input","idName","placeholder","type","value","onChange","required","usePost","success","setSuccess","sendData","newState","method","headers","body","JSON","stringify","Create","state","setState","handleChange","e","target","onSubmit","preventDefault","Date","now","htmlFor","defaultValue","rows","disabled","BlogDetails","useParams","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5b86a49.chunk.js","sourcesContent":["import moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BlogList = ({ blogs, title, gridCol }) => {\r\n  const randomNumber = (max, min) => {\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return random;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className='primaryHeading'>{title}</h2>\r\n      <div className={`py-4 grid gap-4 grid-cols-1 ${gridCol}`}>\r\n        {blogs.map((blog) => {\r\n          const { title, author, date, content, id } = blog;\r\n          return (\r\n            <Link to={`/blogs/${id}`} key={id}>\r\n              <figure className='figure'>\r\n                <div className='flex items-center justify-between'>\r\n                  <h2 className='figure__title'> {title}</h2>\r\n                  <span className='figure__date'>{moment(date).format('MMMM Do YYYY')}</span>\r\n                </div>\r\n                <span className='figure__author'>by {author}</span>\r\n                <p className='figure__content'>{content.substring(0, randomNumber(100, 120))} ...</p>\r\n              </figure>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useFetch = (url, time = 400) => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchBlogs = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Could not fetch data. Received ${response.status}`);\r\n      }\r\n      setData(data);\r\n      setLoading(false);\r\n      setError(null);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(error.message);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetchBlogs();\r\n    }, time);\r\n\r\n    //Clean the stats when component unmounts\r\n    return () => {\r\n      setData(null);\r\n      setLoading(false);\r\n      setError(null);\r\n    };\r\n  }, [fetchBlogs, time]);\r\n\r\n  return { data, loading, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import BlogList from '../components/BlogList';\r\nimport useFetch from '../hooks/useFetch';\r\n\r\nconst Home = () => {\r\n  const { data: blogs, loading, error } = useFetch('http://localhost:8000/blogs');\r\n\r\n  return (\r\n    <>\r\n      <div className='container'>\r\n        {error && <div className='text-4xl font-extrabold flex justify-center items-center h-screen'>{error}</div>}\r\n\r\n        {loading && <div className='text-6xl font-extrabold flex justify-center h-screen items-center'>Loading...</div>}\r\n\r\n        {blogs && blogs.length === 0 && (\r\n          <div className='text-6xl font-extrabold flex justify-center h-screen items-center'>No Blogs Found</div>\r\n        )}\r\n\r\n        {blogs && (\r\n          <>\r\n            <BlogList gridCol='md:grid-cols-2 2xl:grid-cols-3' blogs={blogs} title={`Your Daily Blogs!`} />\r\n            <BlogList\r\n              gridCol='md:grid-cols-2'\r\n              blogs={blogs.filter((blog) => blog.author === 'Noman Sheikh')}\r\n              title={`Noman's Blogs!`}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const navData = [\r\n  {\r\n    id: 1,\r\n    name: 'Home',\r\n    link: '/',\r\n    extraClass: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'New Blog',\r\n    link: '/create',\r\n    extraClass: 'bg-pink-light hover:bg-pink-dark text-white-light',\r\n  },\r\n];\r\n","import { navData } from '../assests/data/navData';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className='container'>\r\n      <nav className='navbar'>\r\n        <Link to='/' className='text-2xl'>\r\n          Simple Blogify\r\n        </Link>\r\n\r\n        {/* Nav Links Starts*/}\r\n        <ul className='navbar__links'>\r\n          {/* <div>Dark</div> */}\r\n          {navData.map((item) => {\r\n            const { name, link, id, extraClass } = item;\r\n            return (\r\n              <li key={id} className={`navbar__links__item ${extraClass}`}>\r\n                <Link className='p-3' to={link}>\r\n                  {name}\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        {/* Nav Links Ends */}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const Input = ({ idName, placeholder, type, value, onChange }) => {\r\n  return (\r\n    <input\r\n      required\r\n      value={value}\r\n      onChange={onChange}\r\n      type={type}\r\n      className='formControl'\r\n      id={idName}\r\n      name={idName}\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst usePost = (url) => {\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const sendData = async (newState) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newState),\r\n      });\r\n\r\n      setLoading(false);\r\n\r\n      if (response.ok) {\r\n        setSuccess('success');\r\n      } else {\r\n        setSuccess('error');\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setSuccess(null);\r\n      }, 2500);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setSuccess('error');\r\n      setTimeout(() => {\r\n        setSuccess(null);\r\n      }, 2500);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setSuccess(null);\r\n      setLoading(null);\r\n    };\r\n  }, []);\r\n\r\n  return { success, loading, sendData };\r\n};\r\n\r\nexport default usePost;\r\n","import { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\nimport Input from './Input';\r\nimport usePost from '../hooks/usePost';\r\n\r\nexport const Create = () => {\r\n  // const navigate = useNavigate();\r\n  const [state, setState] = useState({ title: '', author: 'farhan ahmed hasan', content: '' });\r\n  const { success, loading, sendData } = usePost('http://localhost:8000/blogs');\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newState = { ...state, date: Date.now() };\r\n    sendData(newState);\r\n    setState({ title: '', author: 'farhan ahmed hasan', content: '' });\r\n    // navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h2 className='primaryHeading'>Add a new Blog</h2>\r\n\r\n      <form className='grid grid-cols-1 gap-4 place-items-center' onSubmit={handleSubmit}>\r\n        <div className='w-3/6'>\r\n          <label htmlFor='title'>Title :</label>\r\n          <Input placeholder='Your blog title' idName='title' type='text' value={state.title} onChange={handleChange} />\r\n        </div>\r\n\r\n        {/* Select */}\r\n        <div className='w-3/6'>\r\n          <label htmlFor='author'>Author :</label>\r\n          <select\r\n            required\r\n            value={state.author}\r\n            onChange={handleChange}\r\n            name='author'\r\n            className='formControl cursor-pointer capitalize'\r\n          >\r\n            <option value='noman sheikh'>noman sheikh</option>\r\n            <option value='farhan ahmed hasan' defaultValue>\r\n              farhan ahmed hasan\r\n            </option>\r\n            <option value='rayhan rahat'>rayhan rahat</option>\r\n            <option value='fahad sikhder'>fahad sikhder</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className='w-3/6'>\r\n          <label htmlFor='content'>Content :</label>\r\n          <textarea\r\n            required\r\n            value={state.content}\r\n            onChange={handleChange}\r\n            className='formControl'\r\n            id='content'\r\n            name='content'\r\n            rows='10'\r\n            placeholder=\"Your Blog's Content\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        {/* Button States */}\r\n        {loading ? (\r\n          <button className='btn btn--primary transition-all active:-translate-y-2 mt-4 mb-8' disabled>\r\n            Processing...\r\n          </button>\r\n        ) : (\r\n          <button className='btn btn--primary transition-all active:-translate-y-2 mt-4 mb-8'>Submit</button>\r\n        )}\r\n      </form>\r\n\r\n      {/* Alert */}\r\n      {success === 'success' && <div className='success'>Your Blog has been added successfully</div>}\r\n      {success === 'error' && <div className='danger'>Something Wrong !! We couldn't create your blog</div>}\r\n    </div>\r\n  );\r\n};\r\n","import { useParams } from 'react-router';\r\nimport moment from 'moment';\r\n\r\nimport useFetch from '../hooks/useFetch';\r\n\r\nfunction BlogDetails() {\r\n  const { id } = useParams();\r\n  const { data, loading, error } = useFetch(`http://localhost:8000/blogs/${id}`, 200);\r\n\r\n  const { title, author, content, date } = data || {};\r\n\r\n  return (\r\n    <div>\r\n      {loading && <div className='text-6xl font-extrabold flex justify-center h-screen items-center'>Loading...</div>}\r\n      {error && <div className='text-4xl font-extrabold flex justify-center items-center h-screen'>{error}</div>}\r\n\r\n      {data && (\r\n        <article className='container'>\r\n          <h2 className='primaryHeading'>{title}</h2>\r\n          <span className='figure__author text-center text-sm mb-6'>\r\n            Written by {author} on <span className='text-black-light'>{moment(date).format('MMMM Do YYYY')}</span>\r\n          </span>\r\n          <p className='max-w-5xl mx-auto'>{content}</p>\r\n        </article>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogDetails;\r\n","import Home from './pages/Home';\nimport Navbar from './components/Navbar';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Create } from './components/Create';\nimport BlogDetails from './components/BlogDetails';\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route exact path='/' element={<Home />} />\n        <Route path='/create' element={<Create />} />\n        <Route path='/blogs/:id' element={<BlogDetails />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}